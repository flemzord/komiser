on:
  release:
    types: [published]

name: Release
jobs:
  Build:
    name: 'Build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./dashboard/"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn install
      - run: yarn run build
      - run: yarn run generate
      - run: ls -a ./dist
      - uses: actions/upload-artifact@v2
        with:
          name: dashboard-dist
          path: ./dashboard/dist/**
          retention-days: 2
  GoReleaser:
    name: 'GoReleaser'
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dashboard-dist
          path: dashboard/dist/
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16' # The Go version to download (if necessary) and use.
      - run: go mod download
        working-directory: "./server/"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSO_GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --parallelism 4 --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.PERSO_GITHUB_TOKEN }}
